{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../lib/constants.ts", "../../../lib/rehyePrettyCode.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\r\nimport dayjs from \"dayjs\";\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\nimport rehypePrettyCode from \"rehype-pretty-code\";\r\nimport rehypeSlug from \"rehype-slug\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport { HEADING_LINK_ANCHOR } from \"./lib/constants\";\r\nimport {\r\n  rehypePrettyCodeClasses,\r\n  rehypePrettyCodeOptions,\r\n} from \"./lib/rehyePrettyCode\";\r\nimport GithubSlugger from \"github-slugger\";\r\n\r\nexport const Blog = defineDocumentType(() => ({\r\n  name: \"Blog\",\r\n  contentType: \"mdx\",\r\n  filePathPattern: `*.mdx`,\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    publishedAt: { type: \"string\", required: true },\r\n    description: { type: \"string\" },\r\n    status: { type: \"enum\", options: [\"draft\", \"published\"], required: true },\r\n  },\r\n  computedFields: {\r\n    headings: {\r\n      type: \"json\",\r\n      resolve: async (doc) => {\r\n        const slugger = new GithubSlugger();\r\n        const regexp = /(?<flag>#{1,6})\\s+(?<content>.+)/g;\r\n        console.log(doc.body.raw);\r\n        const headings = Array.from(doc.body.raw.matchAll(regexp)).map(\r\n          ({ groups }) => {\r\n            const flag = groups?.flag;\r\n            const content = groups?.content;\r\n            return {\r\n              heading: flag?.length,\r\n              text: content,\r\n              slug: content ? slugger.slug(content) : undefined,\r\n            };\r\n          }\r\n        );\r\n\r\n        return headings;\r\n      },\r\n    },\r\n\r\n    publishedAtFormatted: {\r\n      type: \"string\",\r\n      resolve: (doc) => {\r\n        return dayjs(doc.publishedAt).format(\"MMMM D, YYYY\");\r\n      },\r\n    },\r\n    slug: {\r\n      type: \"string\",\r\n      resolve: (doc) => `/blogs/${doc._raw.flattenedPath}`,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"blogs\",\r\n  documentTypes: [Blog],\r\n  mdx: {\r\n    esbuildOptions(options) {\r\n      options.target = \"esnext\";\r\n      return options;\r\n    },\r\n    remarkPlugins: [[remarkGfm]],\r\n    rehypePlugins: [\r\n      [rehypeSlug],\r\n      [rehypePrettyCode, rehypePrettyCodeOptions],\r\n      [rehypePrettyCodeClasses],\r\n      [\r\n        rehypeAutolinkHeadings,\r\n        {\r\n          behavior: \"wrap\",\r\n          properties: {\r\n            className: [HEADING_LINK_ANCHOR],\r\n          },\r\n        },\r\n      ],\r\n    ],\r\n  },\r\n});\r\n", "export const FOCUS_VISIBLE_OUTLINE = `focus:outline-none focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-main`;\r\n\r\nexport const LINK_STYLES = `text-primary-main dark:text-secondary-main dark:decoration-secondary-main underline decoration-primary-main underline-offset-2 transition-all hover:text-primary-main hover:decoration-primary-main`;\r\n\r\nexport const LINK_SUBTLE_STYLES = `hover:underline hover:decoration-primary-main hover:underline-offset-2 hover:text-primary-main  dark:text-secondary-main dark:decoration-secondary-main`;\r\n\r\nexport const HEADING_LINK_ANCHOR = `before:content-['#'] before:absolute before:-ml-[1em] dark:before:text-secondary-main dark:hover:before:text-secondary-main before:text-primary-main hover:before:text-primary-main pl-[1em] -ml-[1em]`;\r\n", "import { type Options } from \"rehype-pretty-code\";\r\nimport { visit } from \"unist-util-visit\";\r\n\r\n// div.BLOCK > pre.PRE > code.CODE\r\nconst BLOCK =\r\n  \"overflow-hidden rounded-lg bg-primary-dark shadow-md  shadow-surface-elevation-low ring-1 ring-primary-main/[3%] ring-inset\";\r\nconst TITLE =\r\n  \"mb-0.5  bg-primary-light   px-3 py-1 font-mono text-xs text-secondary-main shadow-sm\";\r\nconst PRE = \"overflow-x-auto p-2 text-[13px] leading-6\";\r\nconst CODE =\r\n  \"grid [&>span]:border-l-4 [&>span]:border-l-transparent [&>span]:pl-2 [&>span]:pr-3\";\r\nconst INLINE_BLOCK =\r\n  \"whitespace-nowrap border border-primary-main/10 px-1.5 py-px text-[12px] rounded-full bg-seconday-main/5 whitespace-nowrap text-primary-main dark:text-secondary-main\";\r\nconst INLINE_CODE = \"\";\r\nconst NUMBERED_LINES =\r\n  \"[counter-reset:line] before:[&>span]:mr-3 before:[&>span]:inline-block before:[&>span]:w-4 before:[&>span]:text-right before:[&>span]:text-white/20 before:[&>span]:![content:counter(line)] before:[&>span]:[counter-increment:line]\";\r\nconst HIGHLIGHTED_LINE =\r\n  \"!border-l-primary-main/70 bg-primary-main/10 before:!text-seconday-main/70\";\r\n\r\nexport function rehypePrettyCodeClasses() {\r\n  return (tree: any) => {\r\n    visit(\r\n      tree,\r\n      (node: any) =>\r\n        Boolean(\r\n          node.tagName === \"code\" &&\r\n            Object.keys(node.properties).length === 0 &&\r\n            node.children.some((n: any) => n.type === \"text\")\r\n        ),\r\n      (node: any) => {\r\n        const textNode = node.children.find((n: any) => n.type === \"text\");\r\n        textNode.type = \"element\";\r\n        textNode.tagName = \"code\";\r\n        textNode.properties = { className: [INLINE_CODE] };\r\n        textNode.children = [{ type: \"text\", value: textNode.value }];\r\n        node.properties.className = [INLINE_BLOCK];\r\n\r\n        node.tagName = \"span\";\r\n      }\r\n    );\r\n\r\n    visit(\r\n      tree,\r\n      (node: any) =>\r\n        Boolean(\r\n          typeof node?.properties?.[\"data-rehype-pretty-code-fragment\"] !==\r\n            \"undefined\"\r\n        ),\r\n      (node: any) => {\r\n        if (node.tagName === \"span\") {\r\n          node.properties.className = [\r\n            ...(node.properties.className || []),\r\n            INLINE_BLOCK,\r\n          ];\r\n          node.children[0].properties.className = [\r\n            ...(node.children[0].properties.className || []),\r\n            INLINE_CODE,\r\n          ];\r\n\r\n          return node;\r\n        }\r\n\r\n        if (node.tagName === \"div\") {\r\n          node.properties.className = [\r\n            ...(node.properties.className || []),\r\n            BLOCK,\r\n          ];\r\n\r\n          node.children = node.children.map((node: any) => {\r\n            if (\r\n              node.tagName === \"div\" &&\r\n              typeof node.properties?.[\"data-rehype-pretty-code-title\"] !==\r\n                \"undefined\"\r\n            ) {\r\n              node.properties.className = [\r\n                ...(node.properties.className || []),\r\n                TITLE,\r\n              ];\r\n            }\r\n            if (node.tagName === \"pre\") {\r\n              node.properties.className = [PRE];\r\n              if (node.children[0].tagName === \"code\") {\r\n                node.children[0].properties.className = [\r\n                  ...(node.children[0].properties.className || []),\r\n                  CODE,\r\n                ];\r\n                if (\r\n                  typeof node.children[0].properties[\"data-line-numbers\"] !==\r\n                  \"undefined\"\r\n                ) {\r\n                  node.children[0].properties.className.push(NUMBERED_LINES);\r\n                }\r\n              }\r\n            }\r\n\r\n            return node;\r\n          });\r\n\r\n          return node;\r\n        }\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nexport const rehypePrettyCodeOptions: Partial<Options> = {\r\n  theme: \"one-dark-pro\",\r\n  tokensMap: {\r\n    // VScode command palette: Inspect Editor Tokens and Scopes\r\n    // https://github.com/Binaryify/OneDark-Pro/blob/47c66a2f2d3e5c85490e1aaad96f5fab3293b091/themes/OneDark-Pro.json\r\n    fn: \"entity.name.function\",\r\n    objKey: \"meta.object-literal.key\",\r\n  },\r\n  onVisitLine(node) {\r\n    // Prevent lines from collapsing in `display: grid` mode, and\r\n    // allow empty lines to be copy/pasted\r\n    if (node.children.length === 0) {\r\n      node.children = [{ type: \"text\", value: \" \" }];\r\n    }\r\n    node.properties.className = [\"\"];\r\n  },\r\n  onVisitHighlightedLine(node) {\r\n    node.properties.className.push(\"highlighted \" + HIGHLIGHTED_LINE);\r\n  },\r\n  onVisitHighlightedWord(node) {\r\n    node.properties.className = [\"word\"];\r\n  },\r\n};\r\n"],
  "mappings": "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",
  "names": ["node"]
}
